register:
  responses:
    201:
      description: "User registered, email verification pending"
    400:
      description:
        "Missing parameters",
        "User already exists!",
        "Email must be a valid UofT email!"
  parameters:
    - name: "user"
      in: "body"
      required: True
      schema:
        type: "object"
        properties:
          full_name:
            type: "string"
            required: true
          password:
            type: "string"
            required: true
          email:
            type: "string"
            required: true
          phone:
            type: "string"
            required: true

login:
  responses:
    200:
      description: "User logged in successfully!"
    404:
      description: "User does not exist!"
    401:
      description: "Incorrect password!"
    400:
      description: "Missing parameters"
  parameters:
    - name: "user"
      in: "body"
      required: True
      schema:
        type: "object"
        properties:
          email:
            type: "string"
            required: true
          password:
            type: "string"
            required: true

update:
  responses:
    200:
      description: JSON response
        full_name:
          type: "string"
          details: User's associated full_name
        email:
          type: "string"
          details: User's associated email
        phone:
          type: "string"
          details: User's associated phone
        rating:
          type: "integer"
          details: User's associated rating
    400:
      description:
        "Missing parameters",
    404:
      description: "User does not exist!"
  parameters:
    - name: "user_email"
      in: "query"
      required: True
      schema:
        type: "object"
        properties:
          email: "string"
    - name: "update_data"
      in: "body"
      required: True
      schema:
        type: "object"
        properties:
          full_name:
            type: "string"
          email:
            type: "string"
          phone:
            type: "string"
          rating:
            type: "float"

change_password:
  responses:
    200:
      description: "Password changed successfully!"
    400:
      description:
        "Missing parameters"
    404:
      description: "User does not exist!"
  parameters:
    - name: "user_email"
      in: "query"
      required: True
      schema:
        type: "object"
        properties:
          email: "string"
    - name: "update_data"
      in: "body"
      required: True
      schema:
        type: "object"
        properties:
          current_password:
            type: "string"
            required: True
          new_password:
            type: "string"
            required: True

send_code:
  responses:
    200:
      description: "Verification code sent to user's email", "User email is already verified!"
    400:
      description: "Missing parameters"
    404:
      description: "User does not exist!"
  parameters:
    - name: "user_email"
      in: "query"
      required: True
      schema:
        type: "object"
        properties:
          email: "string"
    - name: "state"
      in: "body"
      required: True
      schema:
        type: "object"
        properties:
          for_forget_pwd:
            type: "boolean"
            default: False
            required: False

verify_email:
  responses:
    200:
      description: "User email verified successfully!"
    400:
      description:
        "Missing parameters",
        "Email verification code has not been sent",
        "Invalid validation code",
        "Validation code has expired"
    404:
      description: "User does not exist!"
  parameters:
    - name: "user_email"
      in: "query"
      required: True
      schema:
        type: "object"
        properties:
          email: "string"
    - name: "state"
      in: "body"
      required: True
      schema:
        type: "object"
        properties:
          for_forget_pwd:
            type: "boolean"
            default: False
            required: False
          code:
            type: "integer"
            required: True

forgot_password:
  responses:
    200:
      description: "Password reset successfully!"
    400:
      description:
        "Missing parameters", "Invalid format", "User email must be verified before resetting password"
    404:
      description: "User does not exist!"
  parameters:
    - name: "user_email"
      in: "query"
      required: True
      schema:
        type: "object"
        properties:
          email: "string"
    - name: "verify"
      in: "body"
      required: True
      schema:
        type: "object"
        properties:
          email:
            type: "string"
            required: True
          new_password:
            type: "string"
            required: True

add_interest:
  responses:
    200:
      description: "Listings added successfully or no listings provided."
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: "success"
              message:
                type: string
                examples:
                  listings_added: "Listings added successfully!"
                  no_change: "No listings provided, nothing changed!"
    404:
      description: "User does not exist."
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: "error"
              message:
                type: string
                example: "User does not exist!"
  parameters:
    - name: user_email
      in: query
      required: true
      schema:
        type: string
        example: "user@example.com"
    - name: listings
      in: body
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              listing_ids:
                type: array
                items:
                  type: integer
                example: [1, 2, 3]
get_info:
  responses:
    200:
      description: JSON response
        full_name:
          type: "string"
          details: User's associated full_name
        email:
          type: "string"
          details: User's associated email
        phone:
          type: "string"
          details: User's associated phone
        rating:
          type: "string"
          details: User's associated rating
    404:
      description: "User does not exist!"
  parameters:
    - name: "user_email"
      in: "query"
      required: True
      schema:
        type: "object"
        properties:
          email: "string"

get_listings:
  responses:
    200:
      description: JSON response
    404:
      description: "User does not exist!"
  parameters:
    - name: "user_email"
        in: "query"
        required: True
        schema:
          type: "object"
          properties:
            email: "string"
    - name: "listings"
      in: "body"
      required: True
      schema:
        type: "object"
        properties:
          minimal:
            type: boolean
            default: True
            required: False
          get_unsold:
            type: boolean
            default: False
            required: False
          get_sold:
            type: boolean
            default: False
            required: False
          get_interested:
            type: boolean
            default: False
            required: False
          get_bought:
            type: boolean
            default: False
            required: False

delete:
  responses:
    200:
      description: "Deleted user successfully!"
    404:
      description: "User does not exist!"
  parameters:
    - name: "user_email"
      in: "query"
      required: True
      schema:
        type: "object"
        properties:
          email: "string"
